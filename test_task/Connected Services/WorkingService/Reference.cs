//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace test_task.WorkingService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/WCFSERVICETOMYAPP")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdatedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxId {
            get {
                return this.TaxIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxIdField, value) != true)) {
                    this.TaxIdField = value;
                    this.RaisePropertyChanged("TaxId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Updated {
            get {
                return this.UpdatedField;
            }
            set {
                if ((this.UpdatedField.Equals(value) != true)) {
                    this.UpdatedField = value;
                    this.RaisePropertyChanged("Updated");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserOperationResult", Namespace="http://schemas.datacontract.org/2004/07/WCFSERVICETOMYAPP")]
    public enum UserOperationResult : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Good = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NameExists = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmailExists = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxIdExists = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhoneNumberExists = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WorkingService.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GettingAllUsers", ReplyAction="http://tempuri.org/IService1/GettingAllUsersResponse")]
        test_task.WorkingService.User[] GettingAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GettingAllUsers", ReplyAction="http://tempuri.org/IService1/GettingAllUsersResponse")]
        System.Threading.Tasks.Task<test_task.WorkingService.User[]> GettingAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddingNewUser", ReplyAction="http://tempuri.org/IService1/AddingNewUserResponse")]
        test_task.WorkingService.UserOperationResult AddingNewUser(test_task.WorkingService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddingNewUser", ReplyAction="http://tempuri.org/IService1/AddingNewUserResponse")]
        System.Threading.Tasks.Task<test_task.WorkingService.UserOperationResult> AddingNewUserAsync(test_task.WorkingService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChargingSomeChanges", ReplyAction="http://tempuri.org/IService1/ChargingSomeChangesResponse")]
        void ChargingSomeChanges(test_task.WorkingService.User oldUser, test_task.WorkingService.User newUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChargingSomeChanges", ReplyAction="http://tempuri.org/IService1/ChargingSomeChangesResponse")]
        System.Threading.Tasks.Task ChargingSomeChangesAsync(test_task.WorkingService.User oldUser, test_task.WorkingService.User newUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteUser", ReplyAction="http://tempuri.org/IService1/DeleteUserResponse")]
        void DeleteUser(test_task.WorkingService.User User);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteUser", ReplyAction="http://tempuri.org/IService1/DeleteUserResponse")]
        System.Threading.Tasks.Task DeleteUserAsync(test_task.WorkingService.User User);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : test_task.WorkingService.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<test_task.WorkingService.IService1>, test_task.WorkingService.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public test_task.WorkingService.User[] GettingAllUsers() {
            return base.Channel.GettingAllUsers();
        }
        
        public System.Threading.Tasks.Task<test_task.WorkingService.User[]> GettingAllUsersAsync() {
            return base.Channel.GettingAllUsersAsync();
        }
        
        public test_task.WorkingService.UserOperationResult AddingNewUser(test_task.WorkingService.User user) {
            return base.Channel.AddingNewUser(user);
        }
        
        public System.Threading.Tasks.Task<test_task.WorkingService.UserOperationResult> AddingNewUserAsync(test_task.WorkingService.User user) {
            return base.Channel.AddingNewUserAsync(user);
        }
        
        public void ChargingSomeChanges(test_task.WorkingService.User oldUser, test_task.WorkingService.User newUser) {
            base.Channel.ChargingSomeChanges(oldUser, newUser);
        }
        
        public System.Threading.Tasks.Task ChargingSomeChangesAsync(test_task.WorkingService.User oldUser, test_task.WorkingService.User newUser) {
            return base.Channel.ChargingSomeChangesAsync(oldUser, newUser);
        }
        
        public void DeleteUser(test_task.WorkingService.User User) {
            base.Channel.DeleteUser(User);
        }
        
        public System.Threading.Tasks.Task DeleteUserAsync(test_task.WorkingService.User User) {
            return base.Channel.DeleteUserAsync(User);
        }
    }
}
